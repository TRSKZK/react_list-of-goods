{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","howToSort","isVisible","reverse","reset","makeListVisible","setState","reverseList","resetList","sortAlphabetical","sortByLength","sortingVisibleGoods","preparedGoods","sort","product1","product2","localeCompare","length","this","visibleGoods","className","type","onClick","disabled","map","product","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAWIC,E,4MACJC,MAAQ,CACNC,MAAOH,EACPI,UAAW,YACXC,WAAW,EACXC,SAAS,EACTC,OAAO,G,EAGTC,gBAAkB,WAChB,EAAKC,UAAS,SAAAP,GAAK,MAAK,CACtBG,WAAYH,EAAMG,UAClBE,OAAO,O,EAIXG,YAAc,WACZ,EAAKD,UAAS,SAAAP,GAAK,MAAK,CACtBI,SAAUJ,EAAMI,QAChBC,OAAO,O,EAIXI,UAAY,WACV,EAAKF,SAAS,CACZF,OAAO,EACPD,SAAS,K,EAIbM,iBAAmB,WACjB,EAAKH,SAAS,CACZL,UAAW,eACXG,OAAO,K,EAIXM,aAAe,WACb,EAAKJ,SAAS,CACZL,UAAW,SACXG,OAAO,K,EAIXO,oBAAsB,WACpB,MAKI,EAAKZ,MAJPE,EADF,EACEA,UACAD,EAFF,EAEEA,MACAG,EAHF,EAGEA,QACAC,EAJF,EAIEA,MAEEQ,EAAgB,YAAIZ,GAAOa,MAAK,SAACC,EAAUC,GAC7C,OAAQd,GACN,IAAK,eACH,OAAOa,EAASE,cAAcD,GAChC,IAAK,SACH,OAAOD,EAASG,OAASF,EAASE,OACpC,QACE,OAAO,MAIb,OAAIb,EACFQ,EAAa,YAAOZ,GAKlBG,EACKS,EAAcT,UAGhBS,G,4CAGT,WACE,MAGIM,KAAKnB,MAFPG,EADF,EACEA,UACAC,EAFF,EAEEA,QAGIgB,EAAeD,KAAKP,sBAE1B,OACE,sBAAKS,UAAU,MAAf,UACE,uCACA,iCACIlB,GACA,wBACEmB,KAAK,SACLC,QAASJ,KAAKb,gBAFhB,mBAOF,wBACEkB,UAAWrB,EACXkB,UAAWjB,EAAU,SAAW,UAChCkB,KAAK,SACLC,QAASJ,KAAKX,YAJhB,SAMGJ,EAAU,WAAa,YAG1B,wBACEoB,UAAWrB,EACXmB,KAAK,SACLC,QAASJ,KAAKT,iBAHhB,+BAQA,wBACEc,UAAWrB,EACXmB,KAAK,SACLC,QAASJ,KAAKR,aAHhB,4BAQA,wBACEa,UAAWrB,EACXmB,KAAK,SACLC,QAASJ,KAAKV,UAHhB,sBASDN,GACC,6BACGiB,EAAaK,KAAI,SAAAC,GAAO,OAAI,6BAAmBA,GAAVA,e,GAnIhCC,IAAMC,WA2IT7B,IChKf8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.76fdc2ce.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  goods: string[],\n  howToSort: string,\n  isVisible: boolean,\n  reverse: boolean,\n  reset: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    howToSort: 'dont sort',\n    isVisible: false,\n    reverse: false,\n    reset: false,\n  };\n\n  makeListVisible = () => {\n    this.setState(state => ({\n      isVisible: !state.isVisible,\n      reset: false,\n    }));\n  };\n\n  reverseList = () => {\n    this.setState(state => ({\n      reverse: !state.reverse,\n      reset: false,\n    }));\n  };\n\n  resetList = () => {\n    this.setState({\n      reset: true,\n      reverse: false,\n    });\n  };\n\n  sortAlphabetical = () => {\n    this.setState({\n      howToSort: 'alphabetical',\n      reset: false,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      howToSort: 'length',\n      reset: false,\n    });\n  };\n\n  sortingVisibleGoods = () => {\n    const {\n      howToSort,\n      goods,\n      reverse,\n      reset,\n    } = this.state;\n    let preparedGoods = [...goods].sort((product1, product2) => {\n      switch (howToSort) {\n        case 'alphabetical':\n          return product1.localeCompare(product2);\n        case 'length':\n          return product1.length - product2.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (reset) {\n      preparedGoods = [...goods];\n\n      return preparedGoods;\n    }\n\n    if (reverse) {\n      return preparedGoods.reverse();\n    }\n\n    return preparedGoods;\n  };\n\n  render() {\n    const {\n      isVisible,\n      reverse,\n    } = this.state;\n\n    const visibleGoods = this.sortingVisibleGoods();\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <div>\n          {!isVisible && (\n            <button\n              type=\"button\"\n              onClick={this.makeListVisible}\n            >\n              Start\n            </button>\n          )}\n          <button\n            disabled={!isVisible}\n            className={reverse ? 'active' : 'initial'}\n            type=\"button\"\n            onClick={this.reverseList}\n          >\n            {reverse ? 'Reversed' : 'Reverse'}\n          </button>\n\n          <button\n            disabled={!isVisible}\n            type=\"button\"\n            onClick={this.sortAlphabetical}\n          >\n            Sort Alphabetical\n          </button>\n\n          <button\n            disabled={!isVisible}\n            type=\"button\"\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            disabled={!isVisible}\n            type=\"button\"\n            onClick={this.resetList}\n          >\n            Reset\n          </button>\n        </div>\n\n        {isVisible && (\n          <ul>\n            {visibleGoods.map(product => <li key={product}>{product}</li>)}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}